{"mappings":"AEMA,IAEA,EAAA,EAAe,CACb,QAAS,CAAC,EAAM,KACd,GAAI,AAAS,mBAAT,GACE,CAAC,SAAS,cAAc,CAAC,wBAAyB,CAEpD,IAAI,EAAM,SAAS,aAAa,CAAC,OACjC,EAAI,YAAY,CAAC,KAAM,wBACvB,EAAI,YAAY,CAAC,YAAa,aAC9B,EAAI,YAAY,CAAC,cAAe,QAChC,EAAI,YAAY,CACd,QACA,kIAEF,SAAS,IAAI,CAAC,MAAM,CAAC,GACrB,WACE,KACE,IAAI,EACF,SAAS,KAAK,EACd,SAAS,aAAa,CAAC,OAAO,aAC9B,SAAS,QAAQ,AACnB,CAAA,EAAI,WAAW,CAAG,CACpB,EAIA,GAEJ,CAEJ,CACF,EDnCE,KAAK,eAAe,CAAC,kBAAmB","sources":["<anon>","packages/htmx-route-announcer/src/ext.js","packages/htmx-route-announcer/src/index.js"],"sourcesContent":["(function () {\n/*\n    Route Announcer Extension\n    ============================\n    This extension adds a route announcer for screen readers to htmx.\n    Based on the route announcer from Astro View Transitions API (https://github.com/withastro/astro/blob/main/packages/astro/src/transitions/router.ts#L63)\n    by Astro.\n*/ var $0e2b13b4eec43ecd$export$2e2bcd8739ae039 = {\n    onEvent: (name, _)=>{\n        if (name === \"htmx:afterSwap\") {\n            if (!document.getElementById(\"htmx-route-announcer\")) {\n                //  && new URL(event.detail.requestConfig.headers[\"HX-Current-URL\"]).pathname !== event.detail.pathInfo.finalRequestPath\n                let div = document.createElement(\"div\");\n                div.setAttribute(\"id\", \"htmx-route-announcer\");\n                div.setAttribute(\"aria-live\", \"assertive\");\n                div.setAttribute(\"aria-atomic\", \"true\");\n                div.setAttribute(\"style\", \"position:absolute;left:0;top:0;clip:rect(0 0 0 0);clip-path:inset(50%);overflow:hidden;white-space:nowrap;width:1px;height:1px\");\n                document.body.append(div);\n                setTimeout(()=>{\n                    let title = document.title || document.querySelector(\"h1\")?.textContent || location.pathname;\n                    div.textContent = title;\n                }, // Much thought went into this magic number; the gist is that screen readers\n                // need to see that the element changed and might not do so if it happens\n                // too quickly.\n                60);\n            }\n        }\n    }\n};\n\n\n(()=>{\n    htmx.defineExtension(\"route-announcer\", (0, $0e2b13b4eec43ecd$export$2e2bcd8739ae039));\n})();\n\n})();\n//# sourceMappingURL=ext.min.js.map\n","import RouteAnnouncer from \"./index\";\n\n(() => {\n  htmx.defineExtension(\"route-announcer\", RouteAnnouncer);\n})();\n","/*\n    Route Announcer Extension\n    ============================\n    This extension adds a route announcer for screen readers to htmx.\n    Based on the route announcer from Astro View Transitions API (https://github.com/withastro/astro/blob/main/packages/astro/src/transitions/router.ts#L63)\n    by Astro.\n*/\n\nexport default {\n  onEvent: (name, _) => {\n    if (name === \"htmx:afterSwap\") {\n      if (!document.getElementById(\"htmx-route-announcer\")) {\n        //  && new URL(event.detail.requestConfig.headers[\"HX-Current-URL\"]).pathname !== event.detail.pathInfo.finalRequestPath\n        let div = document.createElement(\"div\");\n        div.setAttribute(\"id\", \"htmx-route-announcer\");\n        div.setAttribute(\"aria-live\", \"assertive\");\n        div.setAttribute(\"aria-atomic\", \"true\");\n        div.setAttribute(\n          \"style\",\n          \"position:absolute;left:0;top:0;clip:rect(0 0 0 0);clip-path:inset(50%);overflow:hidden;white-space:nowrap;width:1px;height:1px\"\n        );\n        document.body.append(div);\n        setTimeout(\n          () => {\n            let title =\n              document.title ||\n              document.querySelector(\"h1\")?.textContent ||\n              location.pathname;\n            div.textContent = title;\n          },\n          // Much thought went into this magic number; the gist is that screen readers\n          // need to see that the element changed and might not do so if it happens\n          // too quickly.\n          60\n        );\n      }\n    }\n  },\n};\n"],"names":["$0e2b13b4eec43ecd$export$2e2bcd8739ae039","onEvent","name","_","document","getElementById","div","createElement","setAttribute","body","append","setTimeout","title","querySelector","textContent","location","pathname","htmx","defineExtension"],"version":3,"file":"ext.min.js.map"}