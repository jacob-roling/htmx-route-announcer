{"mappings":"ACAA;;;;;;AAMA,OAEA,2CAAe;IACb,SAAS,CAAC,MAAM;QACd,IAAI,SAAS,kBAAkB;YAC7B,IAAI,YAAY,SAAS,cAAc,CAAC;YAExC,IAAI,CAAC,WAAW;gBACd,YAAY,SAAS,aAAa,CAAC;gBACnC,UAAU,YAAY,CAAC,MAAM;gBAC7B,UAAU,YAAY,CAAC,aAAa;gBACpC,UAAU,YAAY,CAAC,eAAe;gBACtC,UAAU,YAAY,CACpB,SACA;gBAEF,SAAS,IAAI,CAAC,MAAM,CAAC;YACvB;YAEA,MAAM,UAAU,WACd;gBACE,UAAU,WAAW,GACnB,SAAS,KAAK,IACd,SAAS,aAAa,CAAC,MAAM,WAAW,IACxC,SAAS,QAAQ;gBACnB,aAAa;YACf,GACA,4EAA4E;YAC5E,yEAAyE;YACzE,eAAe;YACf;QAEJ;IACF;AACF;;;ADtCC,CAAA;IACC,KAAK,eAAe,CAAC,mBAAmB,CAAA,GAAA,wCAAa;AACvD,CAAA","sources":["packages/htmx-route-announcer/src/ext.js","packages/htmx-route-announcer/src/index.js"],"sourcesContent":["import RouteAnnouncer from \"./index\";\n\n(() => {\n  htmx.defineExtension(\"route-announcer\", RouteAnnouncer);\n})();\n","/*\n    Route Announcer Extension\n    ============================\n    This extension adds a route announcer for screen readers to htmx.\n    Based on the route announcer from Astro View Transitions API (https://github.com/withastro/astro/blob/main/packages/astro/src/transitions/router.ts#L63)\n    by Astro.\n*/\n\nexport default {\n  onEvent: (name, _) => {\n    if (name === \"htmx:afterSwap\") {\n      let announcer = document.getElementById(\"htmx-route-announcer\");\n\n      if (!announcer) {\n        announcer = document.createElement(\"div\");\n        announcer.setAttribute(\"id\", \"htmx-route-announcer\");\n        announcer.setAttribute(\"aria-live\", \"assertive\");\n        announcer.setAttribute(\"aria-atomic\", \"true\");\n        announcer.setAttribute(\n          \"style\",\n          \"position:absolute;left:0;top:0;clip:rect(0 0 0 0);clip-path:inset(50%);overflow:hidden;white-space:nowrap;width:1px;height:1px\"\n        );\n        document.body.append(announcer);\n      }\n\n      const timeout = setTimeout(\n        () => {\n          announcer.textContent =\n            document.title ||\n            document.querySelector(\"h1\").textContent ||\n            location.pathname;\n          clearTimeout(timeout);\n        },\n        // Much thought went into this magic number; the gist is that screen readers\n        // need to see that the element changed and might not do so if it happens\n        // too quickly.\n        60\n      );\n    }\n  },\n};\n"],"names":[],"version":3,"file":"ext.min.js.map"}